{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Fetch Ganttic Resources",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch Ganttic Tasks",
            "type": "main",
            "index": 0
          },
          {
            "node": "Select * Tasks",
            "type": "main",
            "index": 0
          },
          {
            "node": "Select * Resources",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Ganttic Resources": {
      "main": [
        [
          {
            "node": "Process Resources",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Ganttic Tasks": {
      "main": [
        [
          {
            "node": "Process Tasks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Generate Query Embedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Query Embedding": {
      "main": [
        [
          {
            "node": "Format Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Results": {
      "main": [
        [
          {
            "node": "Search Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Database": {
      "main": [
        []
      ]
    },
    "Resources - INSERT": {
      "main": [
        []
      ]
    },
    "Compare Tasks": {
      "main": [
        [
          {
            "node": "Tasks - INSERT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compare Resources": {
      "main": [
        [
          {
            "node": "Resources - INSERT",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        []
      ]
    },
    "Resources - UPDATE": {
      "main": [
        []
      ]
    },
    "Tasks - UPDATE": {
      "main": [
        []
      ]
    },
    "Generate Tasks Embeddings": {
      "main": [
        [
          {
            "node": "Merge VECTORS and Tasks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Tasks": {
      "main": [
        [
          {
            "node": "Generate Tasks Embeddings",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge VECTORS and Tasks",
            "type": "main",
            "index": 1
          },
          {
            "node": "Compare Resources2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compare Resources1": {
      "main": [
        [
          {
            "node": "Resources - DELETE (old)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select * Resources": {
      "main": [
        [
          {
            "node": "Compare Resources1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compare Resources",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Process Resources": {
      "main": [
        [
          {
            "node": "Compare Resources1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Generate VECTORS",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge VECTORS and Resources",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge VECTORS and Resources": {
      "main": [
        [
          {
            "node": "Compare Resources",
            "type": "main",
            "index": 0
          },
          {
            "node": "Resources - UPDATE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate VECTORS": {
      "main": [
        [
          {
            "node": "Merge VECTORS and Resources",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select * Tasks": {
      "main": [
        [
          {
            "node": "Compare Resources2",
            "type": "main",
            "index": 1
          },
          {
            "node": "Compare Tasks",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Compare Resources2": {
      "main": [
        [],
        [],
        [],
        [
          {
            "node": "Tasks - DELETE (old)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge VECTORS and Tasks": {
      "main": [
        [
          {
            "node": "Compare Tasks",
            "type": "main",
            "index": 0
          },
          {
            "node": "Tasks - UPDATE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compare Tasks1": {
      "main": [
        [
          {
            "node": "Tasks - INSERT1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Tasks Embeddings1": {
      "main": [
        [
          {
            "node": "Merge VECTORS and Tasks1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select * Tasks1": {
      "main": [
        [
          {
            "node": "Compare Resources3",
            "type": "main",
            "index": 1
          },
          {
            "node": "Compare Tasks1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Compare Resources3": {
      "main": [
        [],
        [],
        [],
        [
          {
            "node": "Tasks - DELETE (old)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge VECTORS and Tasks1": {
      "main": [
        [
          {
            "node": "Compare Tasks1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Tasks - UPDATE1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Ganttic Projects": {
      "main": [
        [
          {
            "node": "Process Projects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Projects": {
      "main": [
        [
          {
            "node": "Generate Tasks Embeddings1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge VECTORS and Tasks1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Compare Resources3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-18T08:12:12.774Z",
  "id": "LlC5ZAZ5isKRYujS",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "CRUD For Ganttic",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1040,
        140
      ],
      "id": "57840a96-bc9e-4997-b8e6-5100c992bdbc",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "url": "https://planner.ganttic.com/api/v1/resources",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "9062f2555255d4e42a69eb2c54bbbcf61a61e03d2881f4480ea3a5e0e842b8f8"
            },
            {
              "name": "includeEmptyDataFields",
              "value": "0"
            },
            {
              "name": "includeReadableDataFieldValues",
              "value": "0"
            }
          ]
        },
        "options": {}
      },
      "id": "7a82ce74-c959-4c46-9b3b-746db8269ef0",
      "name": "Fetch Ganttic Resources",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -540,
        -520
      ]
    },
    {
      "parameters": {
        "url": "https://planner.ganttic.com/api/v1/tasks",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "9062f2555255d4e42a69eb2c54bbbcf61a61e03d2881f4480ea3a5e0e842b8f8"
            },
            {
              "name": "includeEmptyDataFields",
              "value": "0"
            },
            {
              "name": "timeMin",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "timeMax",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            }
          ]
        },
        "options": {}
      },
      "id": "be6526a4-cbff-48ea-91f7-79c8b8b9cd63",
      "name": "Fetch Ganttic Tasks",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -580,
        60
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.20.70:11434/api/embeddings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "nomic-embed-text"
            },
            {
              "name": "prompt",
              "value": "={{ $json.chatInput }}"
            }
          ]
        },
        "options": {}
      },
      "id": "64e38bfa-0962-4069-9056-7098d8873ac9",
      "name": "Generate Query Embedding",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1660,
        220
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=WITH combined_results AS (\n  -- Search in resources\n  SELECT \n    'resource' AS type,\n    r.name,\n    r.skills,\n    r.industry,\n    r.description,\n    1 - (r.embedding <=> {{$json[\"formattedVector\"]}}::vector) AS similarity\n  FROM ganttic_api_resources r\n  WHERE 1 - (r.embedding <=> {{$json[\"formattedVector\"]}}::vector) > 0.5\n  \n  UNION ALL\n  \n  -- Search in tasks\n  SELECT \n    'task' AS type,\n    t.name,\n    ARRAY[]::text[] AS skills,\n    ARRAY[]::text[] AS industry,\n    t.description,\n    1 - (t.embedding <=> {{$json[\"formattedVector\"]}}::vector) AS similarity\n  FROM ganttic_api_tasks t\n  WHERE 1 - (t.embedding <=> {{$json[\"formattedVector\"]}}::vector) > 0.5\n)\nSELECT *\nFROM combined_results\nORDER BY similarity DESC\nLIMIT 5;\n",
        "options": {}
      },
      "id": "d50a140d-2afa-4aa1-b3f3-22efccedcc11",
      "name": "Search Database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [
        2000,
        220
      ],
      "credentials": {
        "postgres": {
          "id": "wK2pSCG9jTniRU28",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        1620,
        -80
      ],
      "id": "97ef3532-a6b8-4526-b234-cfcbf33ef96c",
      "name": "When chat message received",
      "webhookId": "102a6798-d2ee-424b-8d6c-4f9b3fc65fd0"
    },
    {
      "parameters": {
        "jsCode": "const vector = $input.first().json.embedding;\nreturn {\n  formattedVector: `'[${vector.join(\",\")}]'`\n};"
      },
      "id": "e1703adc-4d15-4d0a-a56a-40a65f4143a2",
      "name": "Format Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1960,
        -80
      ]
    },
    {
      "parameters": {
        "tableId": "ganttic_api_resources",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "id",
              "fieldValue": "={{ $('Process Resources').item.json.id }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $('Process Resources').item.json.name }}"
            },
            {
              "fieldId": "skills",
              "fieldValue": "={{ $('Process Resources').item.json.skills }}"
            },
            {
              "fieldId": "industry",
              "fieldValue": "={{ $('Process Resources').item.json.industry }}"
            },
            {
              "fieldId": "description",
              "fieldValue": "={{ $('Process Resources').item.json.description }}"
            },
            {
              "fieldId": "embedding",
              "fieldValue": "={{ $json.embedding }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        700,
        -1100
      ],
      "id": "7324ca6f-7896-4c13-81f7-3c23c54791f8",
      "name": "Resources - INSERT",
      "credentials": {
        "supabaseApi": {
          "id": "Vbtfas1bVCzZ2Wde",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "tableId": "ganttic_api_tasks",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "id",
              "fieldValue": "={{ $json.id }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $json.name }}"
            },
            {
              "fieldId": "description",
              "fieldValue": "={{ $json.description }}"
            },
            {
              "fieldId": "project_id",
              "fieldValue": "={{ $json.project_id }}"
            },
            {
              "fieldId": "assigned_resources",
              "fieldValue": "={{ $json.assigned_resources }}"
            },
            {
              "fieldId": "start_date",
              "fieldValue": "={{ $json.start_date }}"
            },
            {
              "fieldId": "end_date",
              "fieldValue": "={{ $json.end_date }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "={{ $json.status }}"
            },
            {
              "fieldId": "tags",
              "fieldValue": "={{ $json.tags }}"
            },
            {
              "fieldId": "embedding",
              "fieldValue": "={{ $json.embedding }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        760,
        -180
      ],
      "id": "276009bb-c53d-4715-98f2-d26b6f12f82a",
      "name": "Tasks - INSERT",
      "credentials": {
        "supabaseApi": {
          "id": "Vbtfas1bVCzZ2Wde",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "id",
              "field2": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2.3,
      "position": [
        360,
        60
      ],
      "id": "015ca80a-9b3a-4ea1-a003-d0048dbaa28c",
      "name": "Compare Tasks"
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "id",
              "field2": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2.3,
      "position": [
        380,
        -780
      ],
      "id": "d06a33ed-0378-4101-92c1-2d670c8341f4",
      "name": "Compare Resources"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "ganttic_api_resources",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Process Resources').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $('Process Resources').item.json.name }}"
            },
            {
              "fieldId": "skills",
              "fieldValue": "={{ $('Process Resources').item.json.skills }}"
            },
            {
              "fieldId": "industry",
              "fieldValue": "={{ $('Process Resources').item.json.industry }}"
            },
            {
              "fieldId": "description",
              "fieldValue": "={{ $('Process Resources').item.json.description }}"
            },
            {
              "fieldId": "embedding",
              "fieldValue": "={{ $json.embedding }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        700,
        -720
      ],
      "id": "c7017a59-ce9c-4870-bf4a-dac25017153a",
      "name": "Resources - UPDATE",
      "credentials": {
        "supabaseApi": {
          "id": "Vbtfas1bVCzZ2Wde",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "ganttic_api_tasks",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Process Tasks').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $('Process Tasks').item.json.name }}"
            },
            {
              "fieldId": "description",
              "fieldValue": "={{ $('Process Tasks').item.json.description }}"
            },
            {
              "fieldId": "project_id",
              "fieldValue": "={{ $('Process Tasks').item.json.project_id }}"
            },
            {
              "fieldId": "assigned_resources",
              "fieldValue": "={{ $('Process Tasks').item.json.assigned_resources }}"
            },
            {
              "fieldId": "start_date",
              "fieldValue": "={{ $('Process Tasks').item.json.start_date }}"
            },
            {
              "fieldId": "end_date",
              "fieldValue": "={{ $('Process Tasks').item.json.end_date }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "={{ $('Process Tasks').item.json.status }}"
            },
            {
              "fieldId": "tags",
              "fieldValue": "={{ $('Process Tasks').item.json.tags }}"
            },
            {
              "fieldId": "embedding",
              "fieldValue": "={{ $json.embedding }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        760,
        20
      ],
      "id": "1ce73774-c13a-4eb3-b948-c28df7ebfbef",
      "name": "Tasks - UPDATE",
      "credentials": {
        "supabaseApi": {
          "id": "Vbtfas1bVCzZ2Wde",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.20.70:11434/api/embeddings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "nomic-embed-text"
            },
            {
              "name": "prompt",
              "value": "={{$json[\"embedding_text\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "ebfb10ca-e5c2-4094-9673-916bb49ff460",
      "name": "Generate Tasks Embeddings",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -60,
        -80
      ]
    },
    {
      "parameters": {
        "jsCode": "// Process tasks\nconst item = items[0];\nconst tasks = item.json.items || [];\n\n// Debug log\nconsole.log(`Found ${tasks.length} tasks`);\n\nreturn tasks.map(task => {\n    // Extract tags\n    const tags = [];\n    if (task.dataFields?.multiSelect) {\n        task.dataFields.multiSelect.forEach(ms => {\n            if (ms.values) {\n                ms.values.forEach(v => {\n                    if (v.readableValue && !tags.includes(v.readableValue)) {\n                        tags.push(v.readableValue);\n                    }\n                });\n            }\n        });\n    }\n\n    // Get description\n    let description = '';\n    if (task.dataFields?.texts) {\n        const descField = task.dataFields.texts.find(t => t.readableValue === 'Description');\n        if (descField?.text) {\n            description = descField.text;\n        }\n    }\n\n    // Get assigned resources\n    const assignedResources = task.resources?.map(r => r) || [];\n\n    // Create embedding text\n    const embeddingText = [\n        `Task name: ${task.name}`,\n        `Description: ${description}`,\n        `Project: ${task.project?.name || ''}`,\n        `Status: ${task.status || ''}`,\n        `Assigned to: ${assignedResources.join(', ')}`,\n        `Tags: ${tags.join(', ')}`,\n        `Duration: ${task.start_date || ''} to ${task.end_date || ''}`\n    ].join('\\n');\n\n    return {\n        json: {\n            id: task.id,\n            name: task.name,\n            description: description,\n            project_id: task.projectId??'',\n            assigned_resources: assignedResources,\n            start_date: task.start??'',\n            end_date: task.end??'',\n            status: task.status,\n            tags: tags,\n            embedding_text: embeddingText\n        }\n    };\n});"
      },
      "id": "6d87e337-4483-4797-86e9-addfe9e32f8a",
      "name": "Process Tasks",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -320,
        180
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "ganttic_api_resources",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        700,
        -920
      ],
      "id": "0df158dc-8683-446b-9a35-79b8eca04f47",
      "name": "Resources - DELETE (old)",
      "credentials": {
        "supabaseApi": {
          "id": "Vbtfas1bVCzZ2Wde",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "id",
              "field2": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2.3,
      "position": [
        -20,
        -960
      ],
      "id": "064161c0-4f4e-4db8-adb6-de643274f57a",
      "name": "Compare Resources1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from  public.ganttic_api_resources;",
        "options": {}
      },
      "id": "88a654ee-d040-48cf-bbb8-0c4862dcb346",
      "name": "Select * Resources",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [
        -640,
        -740
      ],
      "credentials": {
        "postgres": {
          "id": "wK2pSCG9jTniRU28",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "\n# CHAT sub",
        "height": 700,
        "width": 760,
        "color": 7
      },
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1480,
        -200
      ],
      "typeVersion": 1,
      "id": "9e08441b-4af0-4fb0-bb12-89284ae45e94"
    },
    {
      "parameters": {
        "content": "# Resources CRUD",
        "height": 680,
        "width": 340,
        "color": 2
      },
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        580,
        -1200
      ],
      "typeVersion": 1,
      "id": "8b131a19-6bf1-479d-861a-2d09531f7c35"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from  public.ganttic_api_tasks;",
        "options": {}
      },
      "id": "c354e978-849a-492d-b8d9-83b015a00f43",
      "name": "Select * Tasks",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [
        -540,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "wK2pSCG9jTniRU28",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Process resources\nconst item = items[0];\nconst resources = item.json.items || [];\n\nreturn resources.map(resource => {\n    // Extract skills\n    const skills = [];\n    if (resource.dataFields?.multiSelect) {\n        resource.dataFields.multiSelect.forEach(ms => {\n            if (ms.values) {\n                ms.values.forEach(v => {\n                    if (v.readableValue && !skills.includes(v.readableValue)) {\n                        skills.push(v.readableValue);\n                    }\n                });\n            }\n        });\n    }\n\n    // Extract industries\n    const industries = [];\n    const industryField = resource.dataFields?.multiSelect?.find(ms => \n        ms.readableValue === 'Industry Expertise'\n    );\n    if (industryField?.values) {\n        industryField.values.forEach(v => {\n            if (v.readableValue) {\n                industries.push(v.readableValue);\n            }\n        });\n    }\n\n    // Get description\n    let description = '';\n    const descField = resource.dataFields?.texts?.find(t => t.id === '121631');\n    if (descField?.text) {\n        description = descField.text;\n    }\n\n    // Create embedding text\n    const embeddingText = [\n        `Resource name: ${resource.name}`,\n        `Skills: ${skills.join(', ')}`,\n        `Industries: ${industries.join(', ')}`,\n        `Description: ${description}`\n    ].join('\\n');\n\n    return {\n        json: {\n            id: resource.id,\n            name: resource.name,\n            skills: skills,\n            industry: industries,\n            description: description,\n            embedding_text: embeddingText\n        }\n    };\n});"
      },
      "id": "58509b6c-bc7b-43e5-9826-e5c7cf1e1f95",
      "name": "Process Resources",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -280,
        -420
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "ff9d80ca-2db1-43ec-8e74-39371fbc554c",
      "name": "Merge VECTORS and Resources",
      "type": "n8n-nodes-base.merge",
      "position": [
        160,
        -380
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.20.70:11434/api/embeddings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "nomic-embed-text"
            },
            {
              "name": "prompt",
              "value": "={{$json[\"embedding_text\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "1513da82-fe60-4056-ab13-d87a0f7f092f",
      "name": "Generate VECTORS",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -40,
        -600
      ]
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "id",
              "field2": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2.3,
      "position": [
        140,
        600
      ],
      "id": "41bc3ed3-7b44-4496-8f4f-e23667202db1",
      "name": "Compare Resources2"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "ganttic_api_tasks",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        760,
        220
      ],
      "id": "dd61e3ca-fa7c-43a5-bc0e-a5c512d13d39",
      "name": "Tasks - DELETE (old)",
      "credentials": {
        "supabaseApi": {
          "id": "Vbtfas1bVCzZ2Wde",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "# Tasks CRUD",
        "height": 680,
        "width": 340,
        "color": 2
      },
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        640,
        -280
      ],
      "typeVersion": 1,
      "id": "ee7a3e50-5dc5-4711-af4c-5ef74e5f1923"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "8fbd7d85-70eb-41d2-8c71-17bbc170ad07",
      "name": "Merge VECTORS and Tasks",
      "type": "n8n-nodes-base.merge",
      "position": [
        140,
        320
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "tableId": "ganttic_api_tasks",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "id",
              "fieldValue": "={{ $json.id }}"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $json.name }}"
            },
            {
              "fieldId": "description",
              "fieldValue": "={{ $json.description }}"
            },
            {
              "fieldId": "project_id",
              "fieldValue": "={{ $json.project_id }}"
            },
            {
              "fieldId": "assigned_resources",
              "fieldValue": "={{ $json.assigned_resources }}"
            },
            {
              "fieldId": "start_date",
              "fieldValue": "={{ $json.start_date }}"
            },
            {
              "fieldId": "end_date",
              "fieldValue": "={{ $json.end_date }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "={{ $json.status }}"
            },
            {
              "fieldId": "tags",
              "fieldValue": "={{ $json.tags }}"
            },
            {
              "fieldId": "embedding",
              "fieldValue": "={{ $json.embedding }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        600,
        1080
      ],
      "id": "b50d5849-fc19-4001-b1dd-d61d93e04164",
      "name": "Tasks - INSERT1",
      "credentials": {
        "supabaseApi": {
          "id": "Vbtfas1bVCzZ2Wde",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "id",
              "field2": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2.3,
      "position": [
        200,
        1320
      ],
      "id": "c68f3761-275b-4248-9c41-ad60524de487",
      "name": "Compare Tasks1"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "ganttic_api_tasks",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Process Projects').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $('Process Projects').item.json.name }}"
            },
            {
              "fieldId": "description",
              "fieldValue": "={{ $('Process Projects').item.json.description }}"
            },
            {
              "fieldId": "project_id",
              "fieldValue": "={{ $('Process Projects').item.json.project_id }}"
            },
            {
              "fieldId": "assigned_resources",
              "fieldValue": "={{ $('Process Projects').item.json.assigned_resources }}"
            },
            {
              "fieldId": "start_date",
              "fieldValue": "={{ $('Process Projects').item.json.start_date }}"
            },
            {
              "fieldId": "end_date",
              "fieldValue": "={{ $('Process Projects').item.json.end_date }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "={{ $('Process Projects').item.json.status }}"
            },
            {
              "fieldId": "tags",
              "fieldValue": "={{ $('Process Projects').item.json.tags }}"
            },
            {
              "fieldId": "embedding",
              "fieldValue": "={{ $json.embedding }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        600,
        1280
      ],
      "id": "931fa259-7ee9-4040-8841-5d8d4cb407cc",
      "name": "Tasks - UPDATE1",
      "credentials": {
        "supabaseApi": {
          "id": "Vbtfas1bVCzZ2Wde",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.20.70:11434/api/embeddings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "nomic-embed-text"
            },
            {
              "name": "prompt",
              "value": "={{$json[\"embedding_text\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "6f35493d-3bee-4645-9fda-507b16f22d65",
      "name": "Generate Tasks Embeddings1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -220,
        1180
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from  public.ganttic_api_tasks;",
        "options": {}
      },
      "id": "e8dc6263-f1e3-4c90-b4f4-31cccb44e14d",
      "name": "Select * Tasks1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [
        -700,
        1640
      ],
      "credentials": {
        "postgres": {
          "id": "wK2pSCG9jTniRU28",
          "name": "Postgres account 2"
        }
      }
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "id",
              "field2": "id"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2.3,
      "position": [
        -20,
        1860
      ],
      "id": "ffe3f3b0-92a8-49a4-a33e-7f928bbec512",
      "name": "Compare Resources3"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "ganttic_api_tasks",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        600,
        1480
      ],
      "id": "3deb2607-32c9-4f19-97f4-4b0cbfad1aae",
      "name": "Tasks - DELETE (old)1",
      "credentials": {
        "supabaseApi": {
          "id": "Vbtfas1bVCzZ2Wde",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "afc44e70-8e44-4579-b005-8b64f05bfdaf",
      "name": "Merge VECTORS and Tasks1",
      "type": "n8n-nodes-base.merge",
      "position": [
        -20,
        1580
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "https://planner.ganttic.com/api/v1/projects",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "9062f2555255d4e42a69eb2c54bbbcf61a61e03d2881f4480ea3a5e0e842b8f8"
            },
            {
              "name": "includeEmptyDataFields",
              "value": "0"
            },
            {
              "name": "timeMin",
              "value": "={{$now.format('yyyy-MM-dd')}}"
            },
            {
              "name": "timeMax",
              "value": "={{$now.plus(1, 'days').format('yyyy-MM-dd')}}"
            }
          ]
        },
        "options": {}
      },
      "id": "780c5016-da95-4722-a197-a0137f0052ba",
      "name": "Fetch Ganttic Projects",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -740,
        1320
      ]
    },
    {
      "parameters": {
        "jsCode": "// Process tasks\nconst item = items[0];\nconst tasks = item.json.items || [];\n\n// Debug log\nconsole.log(`Found ${tasks.length} tasks`);\n\nreturn tasks.map(task => {\n    // Extract tags\n    const tags = [];\n    if (task.dataFields?.multiSelect) {\n        task.dataFields.multiSelect.forEach(ms => {\n            if (ms.values) {\n                ms.values.forEach(v => {\n                    if (v.readableValue && !tags.includes(v.readableValue)) {\n                        tags.push(v.readableValue);\n                    }\n                });\n            }\n        });\n    }\n\n    // Get description\n    let description = '';\n    if (task.dataFields?.texts) {\n        const descField = task.dataFields.texts.find(t => t.readableValue === 'Description');\n        if (descField?.text) {\n            description = descField.text;\n        }\n    }\n\n    // Get assigned resources\n    const assignedResources = task.resources?.map(r => r) || [];\n\n    // Create embedding text\n    const embeddingText = [\n        `Task name: ${task.name}`,\n        `Description: ${description}`,\n        `Project: ${task.project?.name || ''}`,\n        `Status: ${task.status || ''}`,\n        `Assigned to: ${assignedResources.join(', ')}`,\n        `Tags: ${tags.join(', ')}`,\n        `Duration: ${task.start_date || ''} to ${task.end_date || ''}`\n    ].join('\\n');\n\n    return {\n        json: {\n            id: task.id,\n            name: task.name,\n            description: description,\n            project_id: task.projectId??'',\n            assigned_resources: assignedResources,\n            start_date: task.start??'',\n            end_date: task.end??'',\n            status: task.status,\n            tags: tags,\n            embedding_text: embeddingText\n        }\n    };\n});"
      },
      "id": "117274f2-e349-4a49-b57a-648809f76447",
      "name": "Process Projects",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -480,
        1440
      ]
    },
    {
      "parameters": {
        "content": "\n# TODO:\n- finish projects CRUD\n- create mapping table (dynamic join from all 3 resources tables)\n- update new table with vectors\n- test chat :)\n",
        "height": 1200,
        "width": 1920,
        "color": 6
      },
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -880,
        980
      ],
      "typeVersion": 1,
      "id": "f961c951-2241-4dab-8a84-8c6e7e3eb95e"
    }
  ],
  "pinData": {},
  "repo_name": "n8n-backup-zm",
  "repo_owner": "zlatkomq",
  "repo_path": "",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-03-18T08:12:12.774Z",
      "updatedAt": "2025-03-18T08:12:12.774Z",
      "role": "workflow:owner",
      "workflowId": "LlC5ZAZ5isKRYujS",
      "projectId": "hlNkEWAlDmmc5iQw"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-03-31T12:45:21.811Z",
      "updatedAt": "2025-03-31T12:45:21.811Z",
      "id": "mUYuMooITov17Xfj",
      "name": "Ganttic"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-03-31T15:23:52.828Z",
  "versionId": "37aaeb24-ab4a-4d52-a7a1-f08c70249c72"
}